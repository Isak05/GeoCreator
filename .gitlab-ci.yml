# ssh setup script taken from https://gitlab.lnu.se/2dv013/content/examples/example-dockerized-web-application/-/blob/main/.gitlab-ci.yml
.before_script_ssh_setup: &before_script_ssh_setup
  # Ensure ssh-agent is installed and started, essential for managing SSH keys.
  # (Change apt-get to yum if using an RPM-based image)
  - command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )

  # Start the ssh-agent in the background.
  - eval $(ssh-agent -s)

  # Add the SSH private key stored in the SSH_PRIVATE_KEY variable to the ssh-agent.
  # Using 'tr' to remove carriage return characters for compatibility with ed25519 keys.
  # Reference: https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

  # Create the .ssh directory and set the correct permissions.
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  # Use ssh-keyscan to add the remote server's SSH key to the known_hosts file.
  # This prevents SSH from prompting for approval of the remote server's key.
  - ssh-keyscan -H $REMOTE_HOST >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

image: docker:28.1.1-cli

stages:
  - build
  - test
  - deploy

build-job:
  stage: build
  script:
    - echo "Building the application..."
    - docker build -t geocreator:latest -f Dockerfile.prod .

unit-test-job:
  stage: test
  script:
    - echo "Running unit tests... This will take about 10 seconds."
    - sleep 10
    - echo "Code coverage is 90%"

manual-approval:
  stage: deploy
  script:
    - echo "Waiting for manual approval to proceed with deployment..."
  when: manual
  only:
    - main

deploy-job:
  stage: deploy
  environment:
    name: production
    url: https://$PRODUCTION_HOST
  variables:
    DOCKER_HOST: ssh://ubuntu@$REMOTE_HOST
  before_script: 
    - *before_script_ssh_setup
  script:
    - echo "Deploying application..."
    - docker compose -f docker-compose.prod.yml up -d --build
  only:
    - main
  needs:
    - manual-approval

include:
  - template: Jobs/Secret-Detection.gitlab-ci.yml